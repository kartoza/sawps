import { test, expect } from '@playwright/test';

test.use({
  storageState: 'auth.json'
});

test('test', async ({ page }) => {
  await page.goto('https://sawps.sta.do.kartoza.com/');
  await page.getByRole('link', { name: 'ADMIN' }).click();
  await page.getByRole('link', { name: 'My Profile' }).click();
  await expect(page.getByRole('heading', { name: 'Profile Configuration' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'PROFILE' })).toBeVisible();
  await expect(page.locator('svg').nth(2)).toBeVisible();
  await expect(page.getByRole('button', { name: 'Update Password' })).toBeVisible();
  await expect(page.getByText('First name')).toBeVisible();
  await expect(page.getByText('Title')).toBeVisible();
  await expect(page.getByText('Last name')).toBeVisible();
  await expect(page.getByText('Email address')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Update', exact: true })).toBeVisible();
  await page.getByRole('link', { name: 'REMINDERS' }).click();
  await expect(page.getByRole('link', { name: 'REMINDERS' })).toBeVisible();
  await expect(page.getByRole('button', { name: '+ ADD REMINDER' })).toBeVisible();
  await expect(page.getByRole('cell', { name: 'Title' })).toBeVisible();
  await expect(page.getByRole('cell', { name: 'Date' })).toBeVisible();
  await expect(page.getByRole('cell', { name: 'Reminder' })).toBeVisible();
  await expect(page.getByRole('cell', { name: 'Status' })).toBeVisible();
  await page.getByRole('button', { name: '+ ADD REMINDER' }).click();
  await expect(page.getByRole('heading', { name: 'Reminder Details' })).toBeVisible();
  await expect(page.getByLabel('Reminder Details').getByText('Title', { exact: true })).toBeVisible();
  await page.getByLabel('Title').click();
  await page.getByLabel('Title').fill('Reminder');
  await expect(page.getByText('Date and Time', { exact: true })).toBeVisible();
  await page.locator('#datetimepicker').click();
  await page.getByLabel('December 15,').click();
  await page.getByLabel('December 15,').click();
  await page.locator('#datetimepicker').click();
  await page.getByLabel('Hour').click();
  await page.getByLabel('Reminder Details').locator('div').filter({ hasText: 'Title Please provide a valid' }).nth(2).click();
  await page.getByLabel('Reminder', { exact: true }).click();
  await page.getByLabel('Reminder', { exact: true }).fill('Test');
  await expect(page.getByLabel('Reminder Details').getByText('Reminder', { exact: true })).toBeVisible();
  await expect(page.getByText('Reminder Type', { exact: true })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Add', exact: true })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Cancel' })).toBeVisible();
  await page.getByRole('button', { name: 'Add', exact: true }).click();
  await expect(page.locator('tbody')).toContainText('Reminder');
  await expect(page.getByRole('cell', { name: 'ACTIVE' })).toBeVisible();
  await page.getByRole('link', { name: 'NOTIFICATIONS' }).click();
  await expect(page.getByRole('link', { name: 'NOTIFICATIONS' })).toBeVisible();
  await expect(page.getByRole('cell', { name: 'Title' })).toBeVisible();
  await expect(page.locator('tbody')).toContainText('Reminder');
  await expect(page.getByRole('cell', { name: 'Date' })).toBeVisible();
  await expect(page.locator('tbody')).toContainText('2023-12-15 12:00 AM');
  await expect(page.getByRole('cell', { name: 'Notification' })).toBeVisible();
  await expect(page.locator('tbody')).toContainText('Test');
  await page.getByRole('link', { name: 'TWO-FACTOR AUTHENTICATION' }).click();
  await expect(page.getByRole('heading', { name: 'Two-factor authentication method' })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: 'Authenticator App' }).nth(3)).toBeVisible();
  await page.locator('div').filter({ hasText: 'Authenticator App' }).nth(3).click();
  await expect(page.getByRole('heading', { name: 'Two-factor authentication devices' })).toBeVisible();
  await expect(page.getByRole('button', { name: '+ ADD DEVICE' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Two-factor authentication recovery tokens' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'Two-factor authentication recovery tokens' })).toBeVisible();
  await expect(page.locator('#generateTokensForm')).toBeVisible();
  await page.getByRole('link', { name: 'ORGANISATIONS' }).click();
  await expect(page.getByRole('link', { name: 'ORGANISATIONS' })).toBeVisible();
  await expect(page.getByRole('heading', { name: 'My Organisations' })).toBeVisible();
  await expect(page.locator('thead')).toContainText('Active');
  await expect(page.locator('thead')).toContainText('Name');
  await expect(page.locator('thead')).toContainText('Data Use Permissions');
});